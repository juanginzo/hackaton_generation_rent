
import pandas as pd

reviews2 = pd.read_csv('airbnb_data/reviews 2.csv')
print(reviews2.shape)
reviews2.head(3)

neighbourhoods_geo_json = pd.read_json('airbnb_data/neighbourhoods.geojson')
print(neighbourhoods_geo_json.shape)
neighbourhoods_geo_json.head(3) # neighbourhood_group is all NaN

neighbourhoods = pd.read_csv('airbnb_data/neighbourhoods.csv')
print(neighbourhoods.shape)
neighbourhoods.head(3) # neighbourhood_group is all NaN

calendar = pd.read_csv('airbnb_data/calendar.csv')
print(calendar.shape)
calendar.head(3)

listings2 = pd.read_csv('airbnb_data/listings 2.csv')
print(listings2.shape)
listings2.head(1)

listings2['zipcode'].head()

count = 0
for row in listings2['zipcode']:
    if len(str(row).split()) == 2:
        count += 1
print(count)

for col in listings2.columns:
    print(col)

listings2['neighbourhood'].value_counts()

listings2['zipcode'].map(lambda x: str(x).split(' ')[0]).value_counts()[:3]

df = pd.read_csv('simd2016_withinds.csv')
deprivation = df[df['Council_area'] == 'City_of_Edinburgh']
deprivation.head()

deprivation.shape

simd16 = pd.read_csv('simd16.csv')
simd16.head()

simd16.shape

deprivation_all = pd.merge(simd16, deprivation, left_on='DZ', right_on='Data_Zone', how='right')
print(deprivation_all.shape)
deprivation_all.head()

df_all = pd.merge(listings2, deprivation_all, left_on='zipcode', right_on='Postcode', how='left')
print(listings2.shape)
print(deprivation_all.shape)
print(df_all.shape)
df_all[['zipcode', 'Postcode']].head(10)

df_all.drop_duplicates()

from sklearn.dummy import DummyRegressor

model = DummyRegressor()

from sklearn.datasets import make_regression

X, y = make_regression(n_samples=500, n_features=2)

model.fit(X, y)

len(model.predict(X))
